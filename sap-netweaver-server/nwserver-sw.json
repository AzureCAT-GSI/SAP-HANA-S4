{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
      "osType": {
          "type": "string",
          "allowedValues": [
              "Windows Server 2016 Datacenter",
              "SLES 12 SP3",
              "SLES 12 SP3 BYOS",
              "SLES 12 SP2",
              "SLES 12 SP2 BYOS"
          ],
          "defaultValue": "SLES 12 SP3",
          "metadata": {
              "description": "The type of the operating system you want to deploy."
          }
      },
      "customUri": {
          "type": "string",
          "metadata": {
              "description": "Uri for SAP Bits"
          },
          "defaultValue": "https://raw.githubusercontent.com/AzureCAT-GSI/SAP-HANA-S4/master/"
      },
      "_artifactsLocation": {
          "type": "string",
          "metadata": {
              "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
          },
          "defaultValue": "https://raw.githubusercontent.com/AzureCAT-GSI/SAP-HANA-S4/master/sap-netweaver-server"
      },
      "_artifactsLocationSasToken": {
          "type": "securestring",
          "metadata": {
              "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
          },
          "defaultValue": ""
      },
      "vmName": {
          "type": "string",
          "metadata": {
              "description": "Netweaver VM name"
          },
          "defaultValue": "nwVm"
      }
  },
  "variables": {
      "vmName": "[parameters('vmName')]",
      "images": {
        "Windows Server 2016 Datacenter": {
          "sku": "2016-Datacenter",
          "offer": "WindowsServer",
          "publisher": "MicrosoftWindowsServer",
          "version": "latest",
          "OSType": "Windows"
        },
        "SLES 12 SP3": {
          "sku": "12-SP3",
          "offer": "SLES-SAP",
          "publisher": "SUSE",
          "version": "latest",
          "OSType": "Linux"
        },
        "SLES 12 SP3BYOS": {
          "sku": "12-SP3",
          "offer": "SLES-SAP-BYOS",
          "publisher": "SUSE",
          "OSType": "Linux",
          "version": "latest"
        },
      "SLES 12 SP2": {
        "sku": "12-SP2",
        "offer": "SLES-SAP",
        "publisher": "SUSE",
        "version": "latest",
        "OSType": "Linux"
      },
      "SLES 12 SP2 BYOS": {
        "sku": "12-SP2",
        "offer": "SLES-SAP-BYOS",
        "publisher": "SUSE",
        "OSType": "Linux",
        "version": "latest"
      }
    },
    "internalOSType": "[variables('images')[parameters('osType')].OSType]",
      "csExtension": {
        "Windows": {
          "script": "[concat(parameters('_artifactsLocation'), '/noop.ps1', parameters('_artifactsLocationSasToken'))]",
          "scriptCall": "powershell.exe -ExecutionPolicy bypass -File noop.ps1"
        },
        "Linux": {
          "script": "[concat(parameters('_artifactsLocation'), '/noop.sh', parameters('_artifactsLocationSasToken'))]",
          "scriptCall": "sh noop.sh"
        }
      },
      "csExtensionScript": {
        "value": "[variables('csExtension')[variables('internalOSType')].script]"
      },
      "csExtensionscriptCall": {
        "value": "[variables('csExtension')[variables('internalOSType')].scriptCall]"
      }
  },
  "resources": [
      {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(variables('vmName'),'/', 'CustomScript')]",
          "apiVersion": "2017-12-01",
          "location": "[resourceGroup().location]",
          "properties": {
              "publisher": "Microsoft.Azure.Extensions",
              "type": "CustomScript",
              "typeHandlerVersion": "2.0",
              "autoUpgradeMinorVersion": true,
              "settings": {
                  "fileUris": [
                    "[concat(parameters('_artifactsLocation'), '/noop.sh', parameters('_artifactsLocationSasToken'))]"
                  ],
                  "commandToExecute": "sh noop.sh"
              },
              "protectedSettings": {} 
          }
      }
  ],
  "outputs": {}
}
